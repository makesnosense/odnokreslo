<section class="location-section">
  <div class="address">
    <p>Москва, Новый Арбат, 34с1</p>
    <p>ПН–ВС: 13:00–22:00</p>
    <p>По предварительной записи</p>
    <p>Бесплатная парковка на территории</p>
  </div>
  <div class="map-container">
    <div class="map"></div>
    <button class="map-toggle-btn" aria-label="Активировать карту">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <path d="M18 11V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2"></path>
        <path d="M14 10V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2"></path>
        <path d="M10 10.5V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2v8"></path>
        <path
          d="M18 8a2 2 0 1 1 4 0v6a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15"
        ></path>
      </svg>
    </button>
  </div>
</section>

<script
  is:inline
  async
  src="https://api-maps.yandex.ru/v3/?apikey=d03e0055-6f9f-4639-8d4d-a43b12acccc3&lang=ru_RU"
></script>

<script>
  import type { YMapLocationRequest } from "@yandex/ymaps3-types";
  import "@yandex/ymaps3-default-ui-theme/dist/esm/index.css";

  declare global {
    interface Window {
      ymaps3: typeof ymaps3;
    }
  }

  const loadYmaps3 = (): Promise<void> => {
    return new Promise((resolve) => {
      const checkYmapsLoaded = () => {
        if (window.ymaps3) {
          ymaps3.ready.then(resolve);
        } else {
          setTimeout(checkYmapsLoaded, 50);
        }
      };
      checkYmapsLoaded();
    });
  };

  await loadYmaps3();

  const { YMap, YMapDefaultSchemeLayer, YMapControls } = ymaps3;
  const { YMapZoomControl } = await import("@yandex/ymaps3-default-ui-theme");

  const mapContainer = document.querySelector<HTMLElement>(
    ".location-section .map-container",
  );
  const mapElement = document.querySelector<HTMLElement>(
    ".location-section .map",
  );
  const toggleBtn = document.querySelector<HTMLButtonElement>(
    ".location-section .map-toggle-btn",
  );

  if (!mapContainer || !mapElement || !toggleBtn) {
    throw new Error("Not all needed map elements are present");
  }

  const LOCATION: YMapLocationRequest = {
    center: [37.579055, 55.753136],
    zoom: 15,
  };

  const isTouchDevice =
    "ontouchstart" in window || navigator.maxTouchPoints > 0;

  // hide button on desktop
  if (!isTouchDevice) {
    toggleBtn.style.display = "none";
  }

  const map = new YMap(
    mapElement,
    {
      location: LOCATION,
      behaviors: isTouchDevice ? [] : ["drag"],
    },
    [new YMapDefaultSchemeLayer({})],
  );

  const controls = new YMapControls({ position: "right" });
  controls.addChild(new YMapZoomControl({ easing: "ease-in-out" }));
  map.addChild(controls);

  // toggle logic for mobile
  if (isTouchDevice) {
    let isMapActive = false;

    // initially, map doesn't intercept touches
    mapElement.style.pointerEvents = "none";

    const toggleMapInteraction = () => {
      isMapActive = !isMapActive;

      if (isMapActive) {
        // enable map interaction, disable page scroll
        map.setBehaviors(["drag", "pinchZoom"]);
        mapElement.style.pointerEvents = "auto";
        mapElement.style.touchAction = "none";
        toggleBtn.classList.add("enabled");
      } else {
        // disable map interaction, enable page scroll
        map.setBehaviors([]);
        mapElement.style.pointerEvents = "none";
        mapElement.style.touchAction = "auto";
        toggleBtn.classList.remove("enabled");
      }
    };

    toggleBtn.addEventListener("click", toggleMapInteraction);
  }
</script>

<style>
  .location-section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    row-gap: 1rem;
    padding-top: 1rem;
  }

  .address {
    line-height: 2;
    text-align: center;
  }

  .map-container {
    width: 100%;
    height: 320px;
    padding: 0;
    position: relative;
    touch-action: manipulation;

    & .map {
      width: 100%;
      height: 100%;
      border: solid 1px rgba(0, 0, 0, 0.3);
      filter: grayscale(100%) contrast(1.2) brightness(0.95);
      cursor: grab;
      &:active {
        cursor: grabbing;
      }
    }

    & .map-toggle-btn {
      position: absolute;
      top: 1rem;
      right: 1rem;
      z-index: 10;
      width: 48px;
      height: 48px;
      border: none;
      border-radius: 8px;
      background: rgba(255, 255, 255, 0.95);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: background-color 0.3s ease;
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
      -webkit-tap-highlight-color: transparent;

      & svg {
        color: #333;
        transition: color 0.3s ease;
        will-change: color;
      }

      &.enabled {
        background: #333;
        & svg {
          color: #fff;
        }
      }
    }
  }
</style>
