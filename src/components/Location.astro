---
import MapToggleButton from "./MapToggleButton.astro";
---

<section class="location-section">
  <div class="address">
    <p>Москва, Новый Арбат, 34с1</p>
    <p>ПН–ВС: 13:00–22:00</p>
    <p>По предварительной записи</p>
    <p>Бесплатная парковка на территории</p>
  </div>
  <div class="map-container">
    <div class="map grayscale"></div>
    <MapToggleButton />
  </div>
</section>

<script
  is:inline
  async
  src="https://api-maps.yandex.ru/v3/?apikey=d03e0055-6f9f-4639-8d4d-a43b12acccc3&lang=ru_RU"
></script>

<script>
  import type { YMapLocationRequest } from "@yandex/ymaps3-types";
  import "@yandex/ymaps3-default-ui-theme/dist/esm/index.css";

  declare global {
    interface Window {
      ymaps3: typeof ymaps3;
    }
  }

  const loadYmaps3 = (): Promise<void> => {
    return new Promise((resolve) => {
      const checkYmapsLoaded = () => {
        if (window.ymaps3) {
          ymaps3.ready.then(resolve);
        } else {
          setTimeout(checkYmapsLoaded, 50);
        }
      };
      checkYmapsLoaded();
    });
  };

  await loadYmaps3();

  const { YMap, YMapDefaultSchemeLayer, YMapControls } = ymaps3;
  const { YMapZoomControl } = await import("@yandex/ymaps3-default-ui-theme");

  const mapContainer = document.querySelector<HTMLElement>(
    ".location-section .map-container",
  );
  const mapElement = document.querySelector<HTMLElement>(
    ".location-section .map",
  );
  const toggleBtn = document.querySelector<HTMLButtonElement>(
    ".location-section .map-toggle-btn",
  );
  const mapHint = document.querySelector<HTMLElement>(
    ".location-section .map-hint",
  );

  if (!mapContainer || !mapElement || !toggleBtn || !mapHint) {
    throw new Error("Not all of the map elements are present");
  }

  const toggleButtonAnimations =
    toggleBtn.querySelectorAll<SVGAnimateElement>(".colored-animation");

  if (!toggleButtonAnimations) {
    throw new Error("Toggle button animation elements is not found");
  }

  const LOCATION: YMapLocationRequest = {
    center: [37.579055, 55.753136],
    zoom: 15,
  };

  const isTouchDevice =
    "ontouchstart" in window || navigator.maxTouchPoints > 0;

  // hide button on desktop
  if (!isTouchDevice) {
    toggleBtn.style.display = "none";
  }

  const map = new YMap(
    mapElement,
    {
      location: LOCATION,
      behaviors: isTouchDevice ? [] : ["drag"],
    },
    [new YMapDefaultSchemeLayer({})],
  );

  const controls = new YMapControls({ position: "right" });
  controls.addChild(new YMapZoomControl({ easing: "ease-in-out" }));
  map.addChild(controls);

  // toggle logic for mobile
  if (isTouchDevice) {
    let isMapActive = false;
    let hintTimeout: number | null = null;

    // initially, map doesn't intercept touches
    mapElement.style.pointerEvents = "none";

    const showHint = () => {
      mapHint.classList.add("visible");
      mapElement.classList.add("blurred");

      toggleButtonAnimations.forEach((animation) => animation.beginElement());

      if (hintTimeout) {
        clearTimeout(hintTimeout);
      }
      hintTimeout = window.setTimeout(() => {
        mapHint.classList.remove("visible");
        mapElement.classList.remove("blurred");
        toggleButtonAnimations.forEach((animation) => animation.endElement());
      }, 2000);
    };

    const hideHint = () => {
      mapHint.classList.remove("visible");
      mapElement.classList.remove("blurred");
      toggleButtonAnimations.forEach((animation) => animation.endElement());
      if (hintTimeout) {
        clearTimeout(hintTimeout);
        hintTimeout = null;
      }
    };

    mapContainer.addEventListener("touchstart", (event) => {
      if (!isMapActive) {
        const target = event.target as HTMLElement;
        if (!target.closest("button")) {
          showHint();
        }
      }
    });

    const toggleMapInteraction = () => {
      isMapActive = !isMapActive;
      hideHint();

      if (isMapActive) {
        // enable map interaction, disable page scroll
        map.setBehaviors(["drag", "pinchZoom"]);
        mapElement.style.pointerEvents = "auto";
        mapElement.style.touchAction = "none";
        mapElement.classList.remove("grayscale");
        toggleBtn.classList.add("enabled");
      } else {
        // disable map interaction, enable page scroll
        map.setBehaviors([]);
        mapElement.style.pointerEvents = "none";
        mapElement.style.touchAction = "auto";
        mapElement.classList.add("grayscale");
        toggleBtn.classList.remove("enabled");
      }
    };

    toggleBtn.addEventListener("click", toggleMapInteraction);
  }
</script>

<style>
  .location-section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    row-gap: 1rem;
    padding-top: 1rem;
  }

  .address {
    line-height: 2;
    text-align: center;
  }

  .map-container {
    width: 100%;
    height: 320px;
    padding: 0;
    position: relative;
    touch-action: manipulation;

    & .map {
      --map-blur: ;
      --map-desaturate: ;

      width: 100%;
      height: 100%;
      border: solid 1px rgba(0, 0, 0, 0.3);
      cursor: grab;
      filter: var(--map-blur) var(--map-desaturate);
      transition: filter 0.3s ease;

      &:active {
        cursor: grabbing;
      }

      &.blurred {
        --map-blur: blur(1.5px) brightness(0.95);
      }

      &.grayscale {
        --map-desaturate: grayscale(100%) contrast(1.2) brightness(0.95);
      }
    }
  }
</style>
